@model Intranet.Models.EquipamentoVM

@{
    var cultureInfo = new System.Globalization.CultureInfo("pt-BR");
    var equipamentos = new Intranet.data.Repositories.EquipamentosRepository().ListarEquipamentos();
    var equipamentosTipos = new Intranet.data.Repositories.EquipamentosRepository().ListarEquipamentosTipo();
}


@if (Model.Id != 0)
{
    <div class="panel panel-default">
        <div class="panel-body textRight">
            @using (Html.BeginUmbracoForm<Intranet.Controllers.Surfaces.ReservaEquipamentosSurfaceController>("Excluir", new { Id = Model.Id }))
            {
                @Html.HiddenFor(m => m.Id, new { value = "", @class = "form-control" })
                <button type="submit" class="btn btn-danger"><i class="fa fa-trash" aria-hidden="true"></i> Excluir</button>
            }
        </div>
    </div>
}

<div class="panel panel-default">
    <div class="panel-heading">Equipamento</div>
    <div class="panel-body">

        @{
            Html.EnableClientValidation(true);
            Html.EnableUnobtrusiveJavaScript(true);
        }

        @using (Html.BeginUmbracoForm<Intranet.Controllers.Surfaces.ReservaEquipamentosSurfaceController>("Salvar"))
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(m => m.Id, new { value = "", @class = "form-control" })

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.EquipamentoTipoId)
                @*@Html.TextBoxFor(m => m.EquipamentoTipoId, new { placeholder = "Tipo do Equipamento", @class = "form-control" })*@
                @Html.DropDownListFor(m => m.EquipamentoTipoId, new SelectList(equipamentosTipos, "Id", "Descricao", 1), "Selecione o tipo", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipamentoTipoId)
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.Ativo)
                @Html.TextBoxFor(m => m.Ativo, new { placeholder = "Ativo do Equipamento", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ativo)
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.NumeroSerie)
                @Html.TextBoxFor(m => m.NumeroSerie, new { placeholder = "Número de Serie do Equipamento", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NumeroSerie)
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.Descricao)
                @Html.TextBoxFor(m => m.Descricao, new { placeholder = "Descrição do Equipamento", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descricao)
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.Modelo)
                @Html.TextBoxFor(m => m.Modelo, new { placeholder = "Modelo do Equipamento", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Modelo)
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.DataCadastro)
                @Html.EditorFor(m => m.DataCadastro)
                @Html.ValidationMessageFor(model => model.DataCadastro)
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(m => m.StatusEquipamento)
                @Html.DropDownListFor(m => m.StatusEquipamento, EnumHelper.GetSelectList(typeof(Intranet.Models.StatusEquipamento)), "Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusEquipamento)
            </div>

            <div class="col-md-12 textRight">
                <input type="submit" class="btn btn-primary" value="SALVAR" />
            </div>
        }
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">Equipamentos cadastrados</div>
    <table class="table table-striped table-bordered margin0">
        <thead>
            <tr>
                <th>Equipamento</th>
                <th>Tipo</th>
                <th>Cadastro</th>
                <th class="textCenter">Status</th>
                <th width="60"></th>
            </tr>
        </thead>
        <tbody>

            @if (!equipamentos.Any())
            {
                <tr>
                    <td colspan="4"> Não há equipamentos cadastrados. </td>
                </tr>
            }
            else
            {
                foreach (var item in equipamentos)
                {
                    <tr>
                        <td>@item.Descricao</td>
                        <td>@item.EquipamentoTipo</td>
                        <td>@item.DataCadastro</td>
                        <td class="textCenter">@item.StatusEquipamento.ToString()</td>

                        <td class="textCenter">
                            <button onclick="javascript:window.location = '?Id=@item.Id';" class="btn btn-warning btn-xs">ALTERAR</button>
                        </td>

                    </tr>
                }
            }


        </tbody>
    </table>
</div>

